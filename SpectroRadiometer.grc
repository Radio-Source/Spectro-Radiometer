options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: Custom
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: SpectroRadiometer
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Spectral and Radiometry Receiver
    window_size: 3200,2799
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: actual_dec_label
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: main_tab@0:1,1,1,1
    label: Actual DEC
    type: real
    value: helper.get_decln(ui_decln,decfile,tp_pacer)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 2164]
    rotation: 0
    state: enabled
- name: ang
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: main_tab@1:1,0,1,3
    label: Phase Angle Adjust
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '-180'
    step: '2'
    stop: '180'
    value: '0'
    widget: slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 1904]
    rotation: 0
    state: enabled
- name: anno_status
  id: variable
  parameters:
    comment: ''
    value: helper.do_annotation(ira,declination,baseline,annotation,srate*0.8,abw,ifreq,srate,prefix)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 396]
    rotation: 0
    state: enabled
- name: annotation
  id: variable_qtgui_entry
  parameters:
    comment: ''
    entry_signal: editingFinished
    gui_hint: main_tab@0:2,1,1,2
    label: Quick Annotation
    type: string
    value: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 2452]
    rotation: 0
    state: enabled
- name: baseline_clear_status
  id: variable
  parameters:
    comment: ''
    value: helper.baseline_clearer(clear_baseline)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 172]
    rotation: 0
    state: enabled
- name: baseline_set_status
  id: variable
  parameters:
    comment: ''
    value: helper.baseline_setter(set_baseline)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 172]
    rotation: 0
    state: enabled
- name: clear_baseline
  id: variable_qtgui_push_button
  parameters:
    comment: ''
    gui_hint: main_tab@0:0,1,1,1
    label: Clear Baseline
    pressed: '1'
    released: '0'
    type: int
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 2144]
    rotation: 0
    state: enabled
- name: clk_deriv
  id: variable
  parameters:
    comment: ''
    value: '''None if clock in ["none", "default"] else clock'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 268]
    rotation: 0
    state: enabled
- name: corr_probed
  id: variable_function_probe
  parameters:
    block_id: corr_probe
    comment: ''
    function_args: ''
    function_name: level
    poll_rate: fft_hz
    value: complex(0.0,0.0)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 356]
    rotation: 0
    state: enabled
- name: curr_dx
  id: variable
  parameters:
    comment: ''
    value: helper.curr_diff(fft_probed,enable_normalize,fftsize,0)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 452]
    rotation: 0
    state: enabled
- name: curr_dx2
  id: variable
  parameters:
    comment: ''
    value: helper.curr_diff(fft_probed,enable_normalize,fftsize,1)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 364]
    rotation: 0
    state: enabled
- name: curr_tp_vect
  id: variable
  parameters:
    comment: ''
    value: helper.get_tp_vect(tp_pacer)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 525]
    rotation: 0
    state: enabled
- name: custom_window
  id: variable
  parameters:
    comment: ''
    value: sinc*np.hamming(nphase*nchan)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1920, 2388]
    rotation: 0
    state: enabled
- name: dcblock
  id: variable_qtgui_check_box
  parameters:
    comment: ''
    'false': '0'
    gui_hint: main_tab@1:2,0,1,1
    label: Enable DC block
    'true': '1'
    type: int
    value: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 2340]
    rotation: 0
    state: enabled
- name: dcgain
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: main_tab@1:0,2,1,1
    label: Detector Gain
    label0: 1e2
    label1: 1e3
    label2: 1e4
    label3: 1e5
    label4: 1e6
    labels: '[]'
    num_opts: '5'
    option0: '100'
    option1: '1000'
    option2: '10000'
    option3: '100000'
    option4: '1000000'
    options: '[0, 1, 2]'
    orient: Qt.QHBoxLayout
    type: int
    value: dcg
    widget: radio_buttons
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 1904]
    rotation: 0
    state: enabled
- name: declination
  id: variable
  parameters:
    comment: ''
    value: helper.get_decln(ui_decln,decfile,tp_pacer)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 444]
    rotation: 0
    state: enabled
- name: ebw
  id: variable
  parameters:
    comment: ''
    value: (samp_rate*0.8)/1.0e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 1796]
    rotation: 0
    state: enabled
- name: enable_normalize
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 541]
    rotation: 0
    state: enabled
- name: fft2_probed
  id: variable_function_probe
  parameters:
    block_id: fft2_probe
    comment: ''
    function_args: ''
    function_name: level
    poll_rate: fft_hz
    value: '[-100.0]*fftsize'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [784, 256]
    rotation: 0
    state: enabled
- name: fft_avg
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: main_tab@0:1,2,1,1
    label: Int. Time (Sec.)
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0.5'
    step: '0.5'
    stop: '300'
    value: integration
    widget: counter
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 2400]
    rotation: 0
    state: enabled
- name: fft_hz
  id: variable
  parameters:
    comment: ''
    value: '15'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 316]
    rotation: 0
    state: enabled
- name: fft_log_status
  id: variable
  parameters:
    comment: ''
    value: helper.fft_log(fft_probed,fft2_probed,corr_probed,ifreq,samp_rate,longitude,enable_normalize,prefix,declination,rfilist,dcgain,fft_avg,mode,zerotime,decfile,tp_interval,spec_interval,fft_hz)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 108]
    rotation: 0
    state: enabled
- name: fft_probed
  id: variable_function_probe
  parameters:
    block_id: fft_probe
    comment: ''
    function_args: ''
    function_name: level
    poll_rate: fft_hz
    value: '[-100.0]*fftsize'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 252]
    rotation: 0
    state: enabled
- name: fftrate
  id: variable
  parameters:
    comment: ''
    value: float(samp_rate/fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 1684]
    rotation: 0
    state: enabled
- name: fincr
  id: variable
  parameters:
    comment: ''
    value: (samp_rate/1.0e6)/fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 684]
    rotation: 0
    state: enabled
- name: frate
  id: variable
  parameters:
    comment: Fringe rate
    value: (baseline/wlam)*7.3e-5*math.cos(math.radians(ui_decln))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 1660]
    rotation: 0
    state: enabled
- name: fringe_label
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: main_tab@1:0,1,1,1
    label: Fringe Period(secs)
    type: real
    value: 1.0/frate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 2332]
    rotation: 0
    state: enabled
- name: frotate
  id: variable
  parameters:
    comment: ''
    value: helper.fringe_stop (tp_pacer, ra, decln, longitude, latitude, baseline,
      fstop, ang, ifreq)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [952, 1164]
    rotation: 0
    state: enabled
- name: fstop
  id: variable_qtgui_check_box
  parameters:
    comment: ''
    'false': 'False'
    gui_hint: main_tab@1:2,1,1,1
    label: Fringe Stop
    'true': 'True'
    type: int
    value: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 2128]
    rotation: 0
    state: enabled
- name: gmdate
  id: variable
  parameters:
    comment: ''
    value: '"%04d%02d%02d" % (ltp.tm_year, ltp.tm_mon, ltp.tm_mday)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1608, 1484]
    rotation: 0
    state: enabled
- name: ifreq
  id: variable_qtgui_entry
  parameters:
    comment: ''
    entry_signal: editingFinished
    gui_hint: main_tab@0:0,2,1,1
    label: Frequency
    type: real
    value: frequency
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 2060]
    rotation: 0
    state: enabled
- name: igain
  id: variable_qtgui_entry
  parameters:
    comment: ''
    entry_signal: editingFinished
    gui_hint: main_tab@0:0,3,1,1
    label: RF Gain
    type: real
    value: gain
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 2164]
    rotation: 0
    state: enabled
- name: ira
  id: variable_qtgui_entry
  parameters:
    comment: ''
    entry_signal: editingFinished
    gui_hint: main_tab@0:2,0,1,1
    label: Target Right Ascension
    type: real
    value: ra
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 2420]
    rotation: 0
    state: enabled
- name: km_incr
  id: variable
  parameters:
    comment: ''
    value: (((samp_rate/fftsize)/ifreq)*299792)*-1.0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 500]
    rotation: 0
    state: enabled
- name: ltp
  id: variable
  parameters:
    comment: ''
    value: time.gmtime(time.time())
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1560, 1412]
    rotation: 0
    state: enabled
- name: mode_map
  id: variable
  parameters:
    comment: ''
    value: '{"total" : "Continuum Power", "tp" : "Continuum Power", "diff" : "Differential/Added
      Power", "differential" : "Differential/Added Power", "correlator" : "Cross  Power",
      "interferometer": "Cross Power", "corr" : "Cross Power"}'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 1076]
    rotation: 0
    state: enabled
- name: nchan
  id: variable
  parameters:
    comment: ''
    value: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1920, 2452]
    rotation: 0
    state: enabled
- name: nphase
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1888, 2524]
    rotation: 0
    state: enabled
- name: pchanwidth
  id: variable
  parameters:
    comment: ''
    value: samp_rate/fbsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 1652]
    rotation: 0
    state: enabled
- name: pparam
  id: variable
  parameters:
    comment: ''
    value: prefix+"-"+gmdate+"-psr.params" if psrmode != 0 else "/dev/null"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1504, 1732]
    rotation: 0
    state: enabled
- name: pparamstr
  id: variable
  parameters:
    comment: ''
    value: '"%.2f,%.2f,%.4f,%.4f,%.4f,%d\n" % (psrate/1e3, pchanwidth/1e3, ifreq/1.0e6,samp_rate/1.0e6,ebw,fbsize)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1608, 1732]
    rotation: 0
    state: enabled
- name: psrate
  id: variable
  parameters:
    comment: ''
    value: samp_rate/fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1504, 1652]
    rotation: 0
    state: enabled
- name: psrfilename
  id: variable
  parameters:
    comment: ''
    value: prefix+"-"+gmdate+"-psr.rfb8" if psrmode != 0 else "/dev/null"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1616, 1556]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: int(srate)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 132]
    rotation: 0
    state: enabled
- name: save_filter
  id: variable
  parameters:
    comment: ''
    value: open("poopy.dat", "w").write(str(list(custom_window)))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1752, 2572]
    rotation: 0
    state: enabled
- name: secondary_lmst_label
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: main_tab@1:0,0,1,1
    label: LMST
    type: string
    value: helper.lmst_string(time_pacer,longitude)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 2252]
    rotation: 0
    state: enabled
- name: set_baseline
  id: variable_qtgui_push_button
  parameters:
    comment: ''
    gui_hint: main_tab@0:0,0,1,1
    label: Set Baseline
    pressed: '1'
    released: '0'
    type: int
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 1944]
    rotation: 0
    state: enabled
- name: sinc
  id: variable
  parameters:
    comment: ''
    value: np.sinc(sinc_sample_locations/np.pi)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1752, 2388]
    rotation: 0
    state: enabled
- name: sinc_sample_locations
  id: variable
  parameters:
    comment: ''
    value: np.arange(-np.pi*4/2.0, np.pi*4/2.0, (np.pi/nchan)*(4/nphase))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1752, 2452]
    rotation: 0
    state: enabled
- name: spec_labels
  id: variable
  parameters:
    comment: ''
    value: helper.get_spec_labels(mode)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 584]
    rotation: 0
    state: enabled
- name: start_km
  id: variable
  parameters:
    comment: ''
    value: helper.doppler_start(ifreq,dfreq,samp_rate)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 564]
    rotation: 0
    state: enabled
- name: time_pacer
  id: variable_function_probe
  parameters:
    block_id: fft_probe
    comment: ''
    function_args: ''
    function_name: level
    poll_rate: '2'
    value: '[-100.0]*fftsize'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 356]
    rotation: 0
    state: enabled
- name: tp_pacer
  id: variable_function_probe
  parameters:
    block_id: fft_probe
    comment: ''
    function_args: ''
    function_name: level
    poll_rate: '1'
    value: '[-100.0]*fftsize'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1064, 296]
    rotation: 0
    state: enabled
- name: ui_decln
  id: variable_qtgui_entry
  parameters:
    comment: ''
    entry_signal: editingFinished
    gui_hint: main_tab@0:1,0,1,1
    label: Declination
    type: real
    value: decln
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 2084]
    rotation: 0
    state: enabled
- name: variable_qtgui_label_0
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: main_tab@0:1,3,1,1
    label: Local Mean Sidereal Time
    type: string
    value: helper.lmst_string(time_pacer,longitude)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 2252]
    rotation: 0
    state: enabled
- name: wchan
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: main_tab@0:2,3,1,1
    label: Waterfall Chan
    label0: '0'
    label1: '1'
    label2: High
    label3: ''
    label4: ''
    labels: '[]'
    num_opts: '2'
    option0: '0'
    option1: '1'
    option2: '1'
    option3: '3'
    option4: '4'
    options: '[0, 1, 2]'
    orient: Qt.QHBoxLayout
    type: int
    value: '0'
    widget: combo_box
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 2252]
    rotation: 0
    state: enabled
- name: win
  id: variable
  parameters:
    comment: ''
    value: fft.window.blackmanharris(fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 180]
    rotation: 0
    state: enabled
- name: winsum
  id: variable
  parameters:
    comment: ''
    value: sum(map(lambda x:x*x, win))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 236]
    rotation: 0
    state: enabled
- name: wlam
  id: variable
  parameters:
    comment: Wavelength in meters
    value: 299792000.0/ifreq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 1660]
    rotation: 0
    state: enabled
- name: wrstatus
  id: variable
  parameters:
    comment: ''
    value: open(pparam, "w").write(pparamstr)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1504, 1796]
    rotation: 0
    state: enabled
- name: abw
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Analog  bandwidth
    short_id: ''
    type: eng_float
    value: 4.0e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 2176]
    rotation: 0
    state: enabled
- name: antenna
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Antenna
    short_id: ''
    type: str
    value: RX2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1384, 2176]
    rotation: 0
    state: enabled
- name: baseline
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Baseline length
    short_id: ''
    type: eng_float
    value: '20'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1104, 2276]
    rotation: 0
    state: enabled
- name: bbgain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Baseband Gain
    short_id: ''
    type: eng_float
    value: '5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1360, 2068]
    rotation: 0
    state: enabled
- name: blocks_add_const_vxx_0
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: curr_dx
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 604]
    rotation: 0
    state: enabled
- name: blocks_add_const_vxx_0_0
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: curr_tp_vect[0]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '3600'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 1004]
    rotation: 0
    state: enabled
- name: blocks_add_const_vxx_0_0_0
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: curr_tp_vect[1]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '3600'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 1084]
    rotation: 0
    state: enabled
- name: blocks_add_const_vxx_0_1
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: curr_dx2
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 684]
    rotation: 0
    state: enabled
- name: blocks_add_const_vxx_1
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: 'Add a teensy weensy value here

      To keep from SIGFPE

      When stream is all 0s.'
    const: '1.0e-14'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 1252]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1704, 480]
    rotation: 0
    state: enabled
- name: blocks_add_xx_1
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2512, 2048]
    rotation: 0
    state: enabled
- name: blocks_add_xx_1_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2560, 2440]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 1644]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 1740]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'False'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2088, 2036]
    rotation: 0
    state: enabled
- name: blocks_delay_0_1
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'False'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2136, 2428]
    rotation: 0
    state: enabled
- name: blocks_keep_m_in_n_0
  id: blocks_keep_m_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    m: 2*fftsize
    maxoutbuf: '0'
    minoutbuf: '0'
    n: 3*fftsize
    offset: '0'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 1268]
    rotation: 0
    state: enabled
- name: blocks_keep_m_in_n_0_0
  id: blocks_keep_m_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    m: 2*fftsize
    maxoutbuf: '0'
    minoutbuf: '0'
    n: 3*fftsize
    offset: '0'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 1356]
    rotation: 0
    state: enabled
- name: blocks_keep_one_in_n_0
  id: blocks_keep_one_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n: int((samp_rate/fftsize)/50)
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 12]
    rotation: 0
    state: enabled
- name: blocks_keep_one_in_n_0_0
  id: blocks_keep_one_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n: int((samp_rate/fftsize)/50)
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 116]
    rotation: 0
    state: enabled
- name: blocks_keep_one_in_n_1
  id: blocks_keep_one_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n: int(samp_rate/fft_hz)
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1368, 884]
    rotation: 0
    state: enabled
- name: blocks_multiply_conjugate_cc_0
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: 'The basic correlation operation

      Conjugate multiply of the two streams'
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1480, 1272]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: Allow for phase-adjust on one side
    const: frotate
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1008, 1252]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_1
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '[0.0]*fftsize'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 605]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_2
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: When != 0, this turns on DC blocking
    const: dcblock
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1384, 1092]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_3
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 1.0 if wchan == 0 else 0
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1480, 476]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_3_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 1.0  if wchan == 1 else 0.0
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 532]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_4
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[0:nchan]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2264, 2036]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_4_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[-nchan:]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2264, 1956]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_4_0_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[-nchan:]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2312, 2348]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_4_2
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[0:nchan]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2312, 2428]
    rotation: 0
    state: enabled
- name: blocks_nlog10_ff_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: -20*math.log10(fftsize)-10.0*math.log10(winsum/fftsize)-20*math.log10(1)
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 4]
    rotation: 0
    state: enabled
- name: blocks_nlog10_ff_0_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: -20*math.log10(fftsize)-10.0*math.log10(winsum/fftsize)-20*math.log10(1)
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1384, 108]
    rotation: 0
    state: enabled
- name: blocks_null_source_0
  id: blocks_null_source
  parameters:
    affinity: ''
    alias: ''
    bus_structure_source: '[[0,],]'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_outputs: '1'
    type: float
    vlen: '3600'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 900]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 1380]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 1364]
    rotation: 0
    state: enabled
- name: blocks_sub_xx_0
  id: blocks_sub_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1624, 888]
    rotation: 0
    state: enabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: '40'
    type: float
    vlen: '3600'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 864.0]
    rotation: 0
    state: enabled
- name: clock
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Clock Source
    short_id: ''
    type: str
    value: default
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 2480]
    rotation: 0
    state: enabled
- name: corr_probe
  id: blocks_probe_signal_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1784, 904]
    rotation: 0
    state: enabled
- name: cronk
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 1428]
    rotation: 0
    state: enabled
- name: dcg
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Detector DC Gain
    short_id: ''
    type: intx
    value: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 1972]
    rotation: 0
    state: enabled
- name: decfile
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Declination File Name
    short_id: ''
    type: ''
    value: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 2576]
    rotation: 0
    state: enabled
- name: decln
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Observing Declination
    short_id: ''
    type: eng_float
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 2388]
    rotation: 0
    state: enabled
- name: device
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: SDR Device Name
    short_id: ''
    type: ''
    value: '"rtl=0 file=/dev/zero,rate=5e6"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1008, 2068]
    rotation: 0
    state: enabled
- name: dfreq
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Alternet Doppler Cente Frequency
    short_id: ''
    type: eng_float
    value: '0.0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1536, 2376]
    rotation: 0
    state: enabled
- name: fbsize
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: PSR Filterbank size
    short_id: ''
    type: intx
    value: '128'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 2480]
    rotation: 0
    state: enabled
- name: fft2_probe
  id: blocks_probe_signal_vx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 124]
    rotation: 0
    state: enabled
- name: fft_probe
  id: blocks_probe_signal_vx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 20]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fftsize
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: '[]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 1496]
    rotation: 0
    state: enabled
- name: fft_vxx_0_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fftsize
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: '[]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 1588]
    rotation: 0
    state: enabled
- name: fftsize
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: FFT size
    short_id: ''
    type: intx
    value: '2048'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 2176]
    rotation: 0
    state: enabled
- name: frequency
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Center Frequency
    short_id: ''
    type: eng_float
    value: 1420.4058e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1464, 1972]
    rotation: 0
    state: enabled
- name: gain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: RF Gain
    short_id: ''
    type: eng_float
    value: '30'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 2380]
    rotation: 0
    state: enabled
- name: helper
  id: epy_module
  parameters:
    alias: ''
    comment: 'IMPORTED MODULE

      A bunch of helper bits and pieces for logging, etc'
    source_code: "# this module will be imported in the into your flowgraph\nimport\
      \ sys\nimport os\nimport time\nimport ephem\nimport operator\nimport math\n\
      import numpy\n\ndef getalpha(corner, srate):\n\tq = math.pow(math.e,-2.0*(corner/srate))\n\
      \talpha = 1.0 - q\n\treturn alpha\n\n\nzeromap = {}\n\nlastt = time.time()\n\
      lasttpt = time.time()\nfft_buffer = [1.0e-25]*2048\nfft2_buffer = [0.0]*2048\n\
      baseline_buffer=[0.0]*2048\nbaseline_buffer2=[0.0]*2048\nfreq_mask=[1.0]*2048\n\
      freq_mask_processed=False\ntpwra=-99\ntpwrb=-99\nfirst_time = 0\npacet = time.time()\n\
      corr_sin = 1.0e-12\ncorr_cos = 1.0e-12\ndpwr=0.0\napwr=0.0\nimport copy\n\n\
      def do_annotation(ra,dec,baseline,annotation,bw,abw,freq,srate,prefix):\n  \
      \  ltp = time.gmtime()\n    if len(annotation) <= 0:\n        return True\n\
      \    fn = \"%s%04d%02d%02d-annotation.txt\" % (prefix, ltp.tm_year, ltp.tm_mon,\
      \ ltp.tm_mday)\n    fp = open(fn, \"a\")\n    fp.write (\"Annotation update:\
      \ %04d%02d%02d-%02d:%02d:%02d\\n\" % \n        (ltp.tm_year, ltp.tm_mon, ltp.tm_mday,\
      \ ltp.tm_hour, ltp.tm_min, ltp.tm_sec))\n    fp.write (\"RA: %6.2f\\n\" % ra)\n\
      \    fp.write (\"DEC: %6.2f\\n\" % dec)\n    fp.write (\"Baseline length: %6.2fm\\\
      n\" % baseline)\n    fp.write (\"Annotation: %s\\n\" % annotation)\n    fp.write\
      \ (\"Input Filter Bandwidth: %6.2fMHz\\n\" % (bw/1.0e6))\n    fp.write (\"Analog\
      \ Bandwidth: %6.2fMHz\\n\" % (abw/1.0e6))\n    fp.write (\"Frequency: %8.4fMHz\\\
      n\" % (freq/1.0e6))\n    fp.write (\"Sample rate: %6.2fMsps\\n\\n\" % (srate/1.0e6))\n\
      \    fp.close()\n    return True\n    \n    \ndef fft_log(p,p2,corr,frq,bw,longitude,normalize,prefix,decln,flist,again,ffa,mode,zt,decfile,tpi,spi,hz):\n\
      \    global fft_buffer\n    global first_time\n    global lastt\n    global\
      \ lasttpt\n    global baseline_buffer\n    global baseline_buffer2\n    global\
      \ fft2_buffer\n    global tpwra, tpwrb\n    global dpwr\n    global apwr\n \
      \   global freq_mask\n    global freq_mask_processed\n    global pacet\n   \
      \ global corr_cos, corr_sin\n    global zeromap\n\n    preflist=prefix.split(\"\
      ,\")\n    \n    if ((time.time() - pacet) < (1.0/hz)):\n        return False\n\
      \    \n    pacet = time.time()\n    \n    if (len(p) != len(freq_mask)):\n \
      \       fft_buffer = [1.0e-25]*len(p)\n        fft2_buffer = [0.0]*len(p)\n\
      \        baseline_buffer=[0.0]*len(p)\n        freq_mask=[1.0]*len(p)\n    \n\
      \    fplen = float(len(p))\n    if flist != \"\" and freq_mask_processed ==\
      \ False:\n        nmsks = 0\n        freq_mask_processed = True\n        stf\
      \ = frq-(bw/2.0)\n        incr = bw/fplen\n        flist = flist.split(\",\"\
      )\n        for i in range(0,len(freq_mask)):\n            for f in flist:\n\
      \                if math.fabs(stf-float(f)) <= (incr*2.5):\n               \
      \     freq_mask[i] = 1.0e-15\n                    print(\"Setting mask at F\
      \ %f position %d (%f)\" % (float(f), i, incr*float(i)))\n                  \
      \  nmsks += 1\n            stf += incr\n        print(\"Total mask percentage\
      \ %f\" % ((float(nmsks)/fplen)*100.0))\n                \n    if fft_buffer[10]\
      \ < 1.0e-24:\n        fft_buffer = numpy.copy(p)\n\n    pwra = 0.0\n    pwrb\
      \ = 0.0\n    diff = 0.0\n    a = getalpha(1.0/ffa, hz)\n\n    \n    #\n    #\
      \ Use numpy to process the log10-FFT buffers and turn them\n    #  into linear\
      \ values\n    #\n    ta = numpy.divide(p,[10.0]*len(p))\n    ta = numpy.power([10.0]*len(ta),ta)\n\
      \    ta = numpy.multiply(ta,freq_mask)\n    pwra = numpy.sum(ta)\n    \n   \
      \ tb = numpy.divide(p2,[10.0]*len(p))\n    tb = numpy.power([10.0]*len(tb),tb)\n\
      \    tb = numpy.multiply(tb,freq_mask)\n    pwrb = numpy.sum(tb)\n    \n   \
      \ ffts = [ta, tb]\n    \n    w = 0\n    for  tf in ffts:\n        #\n      \
      \  # To guard against log10 blowing up\n        #\n        tf = numpy.add([1.0e-22]*len(tf),\
      \ tf)\n\n        #\n        # Integrate as a vector\n        #\n        tf =\
      \ numpy.multiply([a]*len(tf),tf)\n        tf2 = numpy.multiply([1.0-a]*len(tf),\
      \ fft_buffer if w == 0 else fft2_buffer)\n        tf = numpy.add(tf2,tf)\n\n\
      \        #\n        # Update it BEFORE we convert to log10, dummy\n        #\n\
      \        if (w == 0):\n            fft_buffer = tf\n        else:\n        \
      \    fft2_buffer = tf\n        \n        w += 1\n    \n    \n    atp=a\n   \
      \ \n    #\n    # Gain settings\n    #\n    corr_a = corr.real * again\n    corr_b\
      \ = corr.imag * again\n    pwra *= again\n    pwrb *= again\n    \n    #\n \
      \   # Prime the integrator\n    #\n    if (tpwra < -10):\n        tpwra = pwra\n\
      \        tpwrb = pwrb\n        \n    if (corr_cos < -1.0e-10):\n        corr_cos\
      \ = corr_a\n        corr_sin = corr_b\n    \n    #\n    # Integration\n    #\n\
      \    corr_cos = (atp * corr_a) + ((1.0 - atp)*corr_cos)\n    corr_sin = (atp\
      \ * corr_b) + ((1.0 - atp)*corr_sin)\n\n    tpwra = (atp * pwra) + ((1.0 - atp)*tpwra)\n\
      \    tpwrb = (atp * pwrb) + ((1.0 - atp)*tpwrb)\n    \n    \n    diff = tpwra\
      \ - tpwrb\n    added = tpwra + tpwrb\n\n    if (first_time == 0):\n        first_time\
      \ = int(time.time())\n    \n    if (mode == \"differential\" or mode == \"diff\"\
      ):\n        dpwr = diff\n        apwr = added\n    \n    elif (mode == \"interferometer\"\
      \ or mode == \"corr\" or mode == \"correlator\"):\n        dpwr = corr_cos\n\
      \        apwr = corr_sin\n    \n    else:\n        dpwr = tpwra   \n       \
      \ apwr = 0.0\n\n    #\n    # Allow integrators to settle, etc, so don't write\
      \ \"ramp up\" data\n    #\n    if ((time.time() - first_time) > 20):\n     \
      \       \n        if (time.time() - lasttpt) >= tpi:\n            lasttpt =\
      \ time.time()\n            \n            ltp = time.gmtime()\n            for\
      \ prefix in preflist:\n                fn=\"%s%04d%02d%02d-tp.csv\" % (prefix,\
      \ ltp.tm_year, ltp.tm_mon, ltp.tm_mday)\n                f = open (fn, \"a\"\
      )\n                f.write (\"%02d,%02d,%02d,\" % (ltp.tm_hour, ltp.tm_min,\
      \ ltp.tm_sec))\n                f.write (\"%s,\" % cur_sidereal(longitude))\n\
      \                f.write(\"%5.5f,\" % (frq/1.0e6))\n                f.write(\"\
      %5.5f,\" % bw)\n                f.write(\"%5.1f,\" % decln)\n              \
      \  f.write(\"%10.7f,\" % tpwra)\n                f.write(\"%10.7f,\" % tpwrb)\n\
      \                f.write(\"%10.7f,\" % diff)\n                f.write(\"%10.7f,\"\
      \ % added)\n                f.write(\"%10.7f,%10.7f\\n\" %  (corr_cos, corr_sin))\n\
      \                f.close()\n        \n        if (time.time() - lastt) >= spi:\n\
      \            lastt = time.time()\n            ltp = time.gmtime()\n        \
      \    \n            ffts = [fft_buffer, fft2_buffer]\n            for w in [0,1]:\n\
      \                for prefix in preflist:\n                    fn = \"%s%04d%02d%02d-%d-spec.csv\"\
      \ % (prefix, ltp.tm_year, ltp.tm_mon, ltp.tm_mday, w)\n                    f\
      \ = open (fn, \"a\")\n                    f.write (\"%02d,%02d,%02d,\" % (ltp.tm_hour,\
      \ ltp.tm_min, ltp.tm_sec))\n                    f.write (\"%s,\" % cur_sidereal(longitude))\n\
      \                    f.write(\"%5.5f,\" % (frq/1.0e6))\n                   \
      \ f.write(\"%5.5f,\" % bw)\n                    f.write(\"%5.1f,\" % decln)\n\
      \                    \n                    st = cur_sidereal(longitude)\n  \
      \                  st = st.split(\",\")\n                    st_h = float(st[0])\n\
      \                    st_h += float(st[1])/60.0\n                    st_h +=\
      \ float(st[2])/3600.0\n                        \n                    for i in\
      \ range(0,len(ffts[w])):\n                        try:\n                   \
      \         f.write(\"%6.2f,\" % (math.log10(ffts[w][i])*10.0))\n            \
      \            except:\n                            f.write(\"???,\")\n      \
      \              f.write (\"\\n\")\n                    f.close()\n          \
      \          \n                    d_ndx = int(decln)\n                    if\
      \ (d_ndx in zeromap and (st_h - zeromap[d_ndx]) < (35.0/3600.0)):\n        \
      \                baseline_setter(1)\n            return 1\n        \n    return\
      \ 0\n \ndef smooth(vect,a=0.4):\n    return vect\n    ovect=[0]*len(vect)\n\
      \    val=vect[0]\n    for i in range(0,len(vect)):\n        val = (a*vect[i])\
      \ + ((1.0 - a)*val)\n        ovect[i] = val\n    \n    return ovect   \n   \
      \ \ndef avgvect(v1, v2):\n    q = map(operator.add, v1, v2)\n    return map(operator.div,\
      \ q, [2]*len(v1))\n\ndef cur_sidereal(longitude):\n    longstr = \"%02d\" %\
      \ int(longitude)\n    longstr = longstr + \":\"\n    longitude = abs(longitude)\n\
      \    frac = longitude - int(longitude)\n    frac *= 60\n    mins = int(frac)\n\
      \    longstr += \"%02d\" % mins\n    longstr += \":00\"\n    x = ephem.Observer()\n\
      \    x.date = ephem.now()\n    x.long = longstr\n    jdate = ephem.julian_date(x)\n\
      \    tokens=str(x.sidereal_time()).split(\":\")\n    hours=int(tokens[0])\n\
      \    minutes=int(tokens[1])\n    seconds=int(float(tokens[2]))\n    sidt = \"\
      %02d,%02d,%02d\" % (hours, minutes, seconds)\n    return (sidt)\n    \ndef curr_findx(pace):\n\
      \    global  sched_index\n    global schedule\n    global baseline_count\n \
      \   global MAX_BASELINE\n    \n    if baseline_count > MAX_BASELINE:\n     \
      \   return 0\n\n    cur=schedule[sched_index]\n    sched_index = sched_index\
      \ + 1\n    if sched_index >= len(schedule):\n        sched_index = 0\n    return\
      \ cur\n\n\n#\n# Get (baselined) FFT buffer, whichever is selected for display\n\
      #\ndef curr_diff(pace,normalize,expected,which):\n    global fft_buffer\n  \
      \  global baseline_buffer\n    global fft2_buffer\n    global baseline_buffer2\n\
      \    \n    inbuf = [fft_buffer, fft2_buffer]\n    basebuf = [baseline_buffer,\
      \ baseline_buffer2]\n    \n    if (len(fft_buffer) != expected):\n        return\
      \ ([-120.0]*expected)\n    \n    if (numpy.sum(basebuf[which]) == 0.0):\n  \
      \      x = inbuf[which]\n    else:\n        y = map(operator.add, basebuf[which],\
      \ [1.0e-24]*len(basebuf[which]))\n        x = map(operator.truediv, inbuf[which],\
      \ smooth(y,a=0.5))\n    x = numpy.add(x, [1.0e-24]*len(x))\n    x = numpy.abs(x)\n\
      \    return numpy.multiply(numpy.log10(x),[10.0]*len(x))\n    \ndef not_the_norm(vect):\n\
      \    m=min(vect)\n    s=[m]*len(vect)\n    return map(operator.sub, vect, s)\n\
      \ndef baseline_setter(thing):\n    global baseline_buffer\n    global baseline_buffer2\n\
      \    global fft_buffer\n    global fft_buffer2\n    \n    if thing != 0:\n \
      \       baseline_buffer = smooth(fft_buffer,a=0.5)\n        baseline_buffer\
      \ = numpy.multiply(baseline_buffer,[0.95]*len(baseline_buffer))\n        baseline_buffer2\
      \ = smooth(fft2_buffer,a=0.5)\n        baseline_buffer2 = numpy.multiply(baseline_buffer2,\
      \ [0.95]*len(baseline_buffer2))\n\ndef baseline_clearer(thing):\n    global\
      \ baseline_buffer\n    global fft_buffer\n    global baseline_buffer2\n    global\
      \ fft2_buffer\n    \n    if thing != 0:\n        baseline_buffer = [0.0]*len(fft_buffer)\n\
      \        baseline_buffer2 = [0.0]*len(fft2_buffer)\n\ndef lmst_string(pacer,longitude):\n\
      \    return cur_sidereal(longitude).replace(\",\", \":\")\n\n\nTPLEN=3600\n\
      tp_vect=[0.0]*TPLEN\ntp_vect2=[0.0]*TPLEN\ndef get_tp_vect(pacer):\n    global\
      \ tp_vect\n    global tp_vect2\n    global dpwr\n    global apwr\n    global\
      \ TPLEN\n    \n    \n    tp_vect=tp_vect[0:(TPLEN-1)]\n    tp_vect=[dpwr]+tp_vect\n\
      \    \n    tp_vect2=tp_vect2[0:(TPLEN-1)]\n    tp_vect2=[apwr]+tp_vect2\n  \
      \  \n    if len(tp_vect) != TPLEN:\n        print(\"Blarf!!! short TP_VECT\"\
      )\n    \n    return ([tp_vect,tp_vect2])\n            \n\ntpwr = 0 \ndef lmst_hours(pacer,longitude):\n\
      \    x = lmst_string(1,longitude)\n    \n    x = x.split(\":\")\n    hours =\
      \ float(x[0])\n    hours += float(x[1])/60.0\n    hours += float(x[2])/3600.0\n\
      \    \n    return hours\n\n#\n#\n# Calculations for automated fringe-stopping\n\
      #\n# We are called on a regular basis to produce a complex rotation value that\
      \ is\n#  applied to one leg of the interferometer, to reduce the fringe frequency\
      \ to\n#  close-to zero, thus allowing longer integration times.\n#\ndef ha (ra,longit):\n\
      \    #\n    # First get current sidereal time as as HH:MM:SS string\n    #\n\
      \    lmst = cur_sidereal (longit)\n    parts = lmst.split(\",\")\n    \n   \
      \ #\n    # Re-express lmst (string) as a decimal hours\n    #\n    lmst = float(parts[0])\n\
      \    lmst += float(parts[1]) / 60.0\n    lmst += float(parts[2]) / 3600.0\n\
      \    \n    #\n    # Now compute relative hour-angle between us, and the object\
      \ in question (at some RA)\n    #   When we're done, we have the relative hour-angle\
      \ in radians\n    #\n    h = ra - lmst\n    return (h)\n#\n# Phase accumulator\n\
      #\nphase_accum = 0.0\n\n#\n# For time-delta calcs\n#\nlast_time_phase = -99.0\n\
      \n#\n# Earth rotation in radians/second\n#\nearth = math.radians(360.0 / 86400.0)\n\
      \n#\n# Since part of the calculation only needs to be done when baseline or\n\
      #  frequency changes, we keep 'em global\ngbaseline = 0.0\ngfreq = 0.0\nbasefreqrot\
      \ = 0.0\n\n#\n# Another part only changes when dec/latit changes\n#\ngdec =\
      \ -99.0\nglatit = -99.0\ndeclatrot = 0.0\n\n#\n# The combination of the two\n\
      #\nbaserot = 0.0\n\n#\n# Speed of light, in case it wasn't obvious :)\n#\nC\
      \ = 299792000.0\n\n#\n#\n# Compute phase-rotation value based either on manual\
      \ input, or automatic\n#   fringe rotation\n#\n# pacer   - ignored, simply used\
      \ as a \"dummy\" variable in the flow-graph to\n#           make sure that we're\
      \ called regularly.\n# ra       - The RA in fractional hours\n# dec      - The\
      \ DEC in fractional degrees\n# longit   - Our geographic longitude\n# latit\
      \    - Our geographic latitude\n# baseline - Baseline length, in meters\n# ena\
      \      - Whether automagic or manual is in use\n# manval   - The manual value\n\
      # freq     - The sky frequency\n#\n#\n# These calculations assume a meridian-transit\
      \ type setup, with a strictly east-west baseline\n#\ndef fringe_stop (pacer,\
      \ ra, dec, longit, latit, baseline, ena, manval, freq):\n    global phase_accum\n\
      \    global last_time_phase\n    global earth\n    global gbaseline\n    global\
      \ gfreq\n    global basefreqrot\n    global declatrot\n    global gdec\n   \
      \ global glatit\n    global baserot\n \n    #\n    # Just compute the fixed-value\
      \ from the degrees input by the UI\n    #\n    if ena == False:\n        radians\
      \ = math.radians(manval)\n        return (complex(math.cos(radians),math.sin(radians)))\n\
      \n   \n    #\n    # Handle initialization of our time-delta calculator\n   \
      \ #\n    if last_time_phase < 0:\n        last_time_phase = time.time()\n\n\
      \    #\n    # Compute time delta compared to last-time\n    #\n    now = time.time()\n\
      \    tdelt = now - last_time_phase\n    \n    #\n    # Remember \"now\" for\
      \ next time\n    #\n    last_time_phase = now\n    \n    changed = False\n \
      \   \n    #\n    # If baseline or freq parameters have changed\n    #\n    if\
      \ baseline != gbaseline or freq != gfreq:\n        gbaseline = baseline\n  \
      \      gfreq = freq\n        basefreqrot = (baseline * earth)/(C / freq)\n \
      \       changed = True\n    \n    #\n    # If dec or latit changes\n    #\n\
      \    if dec != gdec or latit != glatit:\n        gdec = dec\n        glatit\
      \ = latit\n        declatrot = math.cos(math.radians(dec))*math.cos(math.radians(latit))\n\
      \        changed = True\n    \n    #\n    # Update the combined \"baserot\"\n\
      \    #\n    if changed == True:\n        baserot = basefreqrot * declatrot\n\
      \        \n    #\n    # First get current sidereal time as as HH:MM:SS string\n\
      \    #\n    lmst = cur_sidereal (longit)\n    parts = lmst.split(\",\")\n  \
      \  \n    #\n    # Re-express lmst (string) as a decimal hours\n    #\n    lmst\
      \ = float(parts[0])\n    lmst += float(parts[1]) / 60.0\n    lmst += float(parts[2])\
      \ / 3600.0\n    \n    #\n    # Now compute relative hour-angle between us, and\
      \ the object in question (at some RA)\n    #   When we're done, we have the\
      \ relative hour-angle in radians\n    #\n    h = ra - lmst\n    h *= math.radians((360.0\
      \ / 24.0))\n        \n    #\n    # Compute fringe rate in radians/hour\n   \
      \ #\n    # h       - relative hour-angle, in radians between us and source\n\
      \    #\n    # Other parameters to the equation don't change with time, so they're\n\
      \    #   efficiently pre-computed above, and re-computed when the input\n  \
      \  #   parameters change\n    #\n    F = baserot*math.sin(h)\n    \n    #\n\
      \    # Because I get lost in the units, the above may be in radians/hour\n \
      \   #   or radians/second so we can just adjust this scaling for the calculation\
      \ below\n    #\n    scale = 1.0/3600.0\n    \n    #\n    # Update the phase\
      \ accumulator (stored in radians)\n    # Handle phase-wrap gracefully\n    #\
      \ (although, the Python transcendentals handle this just fine themselves)\n\
      \    #\n    phase_accum += tdelt*(F * scale)\n    if phase_accum > 2.0*math.pi:\n\
      \        phase_accum -= (2.0*math.pi)\n    \n    #\n    # We return a value\
      \ that can be used by the phase rotator in the flow-graph\n    #\n    rval =\
      \ complex(math.cos(phase_accum),math.sin(phase_accum))\n    return (rval)\n\n\
      def doppler_start(ifreq, dfreq, bw):\n    if (dfreq == 0.0):\n        stf =\
      \ ifreq - bw/2.0\n        dop = (ifreq - stf) / ifreq\n        dop *= 299792.0\n\
      \    else:\n        stf = ifreq - bw/2.0\n        dop = (dfreq - stf) / dfreq\n\
      \        dop *= 299792.0\n    return dop\n\nui_decln = [time.time(), None]\n\
      f_decln = [time.time(), None]\ndef get_decln(decln,decfile,dummy):\n    global\
      \ ui_decln\n    global f_decln\n    try:\n        newdec = open(decfile,\"r\"\
      ).readline().strip(\"\\n\")\n        newdec = float(newdec)\n        if (newdec\
      \ != f_decln[1]):\n            f_decln = [time.time(), newdec]\n    except:\n\
      \        pass\n    \n    if (decln != ui_decln[1]):\n        ui_decln = [time.time(),\
      \ decln]\n\n    if (f_decln[0] > ui_decln[0]):\n        return(f_decln[1])\n\
      \    else:\n        return(ui_decln[1])\n \ndef plotlabel(mode, which):\n  \
      \  w1 = {\"total\" : \"TP\", \"tp\" : \"TP\", \"diff\" : \"Diff\", \"differential\"\
      \ : \"Diff\", \"interf\" : \"Cos\", \"interferometer\" : \"Cos\",\n        \"\
      correlator\" : \"Cos\"}\n    w2 = {\"total\" : \"Zero\", \"tp\" : \"Zero\",\
      \ \"diff\" : \"Sum\", \"differential\" : \"Sum\", \"interf\" : \"Sin\", \"interferometer\"\
      \ : \"Sin\",\n        \"correlator\" : \"Sin\"}\n    \n    ary = [w1,w2]\n \
      \   \n    di = ary[which]\n    return (di[mode])\n\ndef get_spec_labels(mode):\n\
      \    w1 = {\"total\" : \"SKY\", \"tp\" : \"SKY\", \"diff\" : \"SKY\", \"differential\"\
      \ : \"SKY\", \"interf\" : \"East\", \"interferometer\" : \"East\",\n       \
      \ \"correlator\" : \"East\"}\n    w2 = {\"total\" : \"Zero\", \"tp\" : \"Zero\"\
      , \"diff\" : \"REF\", \"differential\" : \"REF\", \"interf\" : \"West\", \"\
      interferometer\" : \"West\",\n        \"correlator\" : \"West\"}\n    \n   \
      \ return ([w1[mode],w2[mode]])\n    \ndef init_zero_map(zf):\n    global zeromap\n\
      \    cnt = 0\n    \n    if (\"\" != zf and zf != None):\n        try:\n    \
      \        f = open(zf, \"r\")\n            lines = f.readlines()\n          \
      \  f.close()\n            for l in lines:\n                l = l.replace(\"\\\
      n\", \"\")\n                ts = l.split(\" \")\n                zeromap[int(ts[0])]\
      \ = float(ts[1])\n                cnt += 1\n        except:\n            pass\n\
      \    return cnt\n            \n"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 20]
    rotation: 0
    state: enabled
- name: ifgain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: IF Gain
    short_id: ''
    type: eng_float
    value: '5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1360, 1972]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 196]
    rotation: 0
    state: enabled
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: from gnuradio import fft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 244]
    rotation: 0
    state: enabled
- name: import_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import time
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 308]
    rotation: 0
    state: enabled
- name: import_0_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1768, 2516]
    rotation: 0
    state: enabled
- name: integration
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Integration Time (Sec.)
    short_id: ''
    type: eng_float
    value: '0.5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1504, 2568]
    rotation: 0
    state: enabled
- name: latitude
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Local Latitude
    short_id: ''
    type: eng_float
    value: '44.9'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1496, 2176]
    rotation: 0
    state: enabled
- name: longitude
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Local Longitude
    short_id: ''
    type: eng_float
    value: '-76.03'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1392, 2276]
    rotation: 0
    state: enabled
- name: main_tab
  id: qtgui_tab_widget
  parameters:
    alias: ''
    comment: ''
    gui_hint: ''
    label0: Spectral
    label1: Continuum
    label10: Tab 10
    label11: Tab 11
    label12: Tab 12
    label13: Tab 13
    label14: Tab 14
    label15: Tab 15
    label16: Tab 16
    label17: Tab 17
    label18: Tab 18
    label19: Tab 19
    label2: Tab 2
    label3: Tab 3
    label4: Tab 4
    label5: Tab 5
    label6: Tab 6
    label7: Tab 7
    label8: Tab 8
    label9: Tab 9
    num_tabs: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 1948]
    rotation: 0
    state: enabled
- name: mode
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Operation Mode
    short_id: ''
    type: ''
    value: '"total"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1392, 2380]
    rotation: 0
    state: enabled
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: 'We synthesize a strip chart by updating

      a vector from a function probe

      That vector contains the current strip-chart

      values.'
    note: Such stripchart...
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 956]
    rotation: 0
    state: enabled
- name: note_1
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Just a pacing source
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 388]
    rotation: 0
    state: enabled
- name: note_2
  id: note
  parameters:
    alias: ''
    comment: Implement simple DC-block, very cheaply.
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 804]
    rotation: 0
    state: enabled
- name: note_3
  id: note
  parameters:
    alias: ''
    comment: '******* GUI ZONE ******

      GUI CONTROL OBJECTS GO HERE!!'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [424, 1844]
    rotation: 0
    state: enabled
- name: note_4
  id: note
  parameters:
    alias: ''
    comment: '**** PARAMETER ZONE *****

      COMMAND-LINE PARAMS GO HERE!!'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1200, 1868]
    rotation: 0
    state: enabled
- name: note_5
  id: note
  parameters:
    alias: ''
    comment: 'The two main FFT pathways

      Connected to the input filters'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 1188]
    rotation: 0
    state: enabled
- name: note_6
  id: note
  parameters:
    alias: ''
    comment: 'Compute a bunch of parameters to

      write to a parameters file for psrmode != 0'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1848, 1780]
    rotation: 0
    state: enabled
- name: note_7
  id: note
  parameters:
    alias: ''
    comment: "None of this pulsar stuff is\nfully fleshed out yet\nProbably fold in\
      \ code from\npulsar_filterbank when I'm \nhappy with it."
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1776, 1636]
    rotation: 0
    state: enabled
- name: note_8
  id: note
  parameters:
    alias: ''
    comment: "Credit for these variable initializations\n  goes to the WVURAIL lab#5\
      \ on PFB\n  spectrometer implementations\n(https://github.com/WVURAIL/dspira/tree/master/labs)"
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1744, 2252]
    rotation: 0
    state: enabled
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: antenna
    ant1: antenna
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: device
    bb_gain0: bbgain
    bb_gain1: bbgain
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: abw
    bw1: abw
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '2'
    dc_offset_mode1: '2'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: ifreq
    freq1: ifreq
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: igain
    gain1: 'igain '
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'False'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: ifgain
    if_gain1: ifgain
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '2'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 20]
    rotation: 0
    state: enabled
- name: ppstime
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Time Source
    short_id: ''
    type: str
    value: internal
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 2480]
    rotation: 0
    state: enabled
- name: prefix
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Data File Prefix
    short_id: ''
    type: ''
    value: '"h1"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1256, 2276]
    rotation: 0
    state: enabled
- name: psrmode
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Enable PSR mode
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1312, 2480]
    rotation: 0
    state: enabled
- name: qtgui_vector_sink_f_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    average: '1.0'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'True'
    gui_hint: spec_tab@0
    label1: spec_labels[0]
    label10: ''
    label2: spec_labels[1]
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Doppler Velocity"'
    nconnections: '2'
    ref_level: '0'
    showports: 'True'
    update_time: 1.0/15
    vlen: fftsize
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"Doppler Velocity (km/s)"'
    x_start: start_km
    x_step: km_incr
    x_units: '"km/s"'
    y_axis_label: '"Rel. Power (dB)"'
    y_units: '"dB"'
    ymax: '+5'
    ymin: '-1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [712, 508]
    rotation: 0
    state: enabled
- name: qtgui_vector_sink_f_0_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'True'
    gui_hint: main_tab@1:3,0,2,4
    label1: spectro_helper.plotlabel(mode,0)
    label10: ''
    label2: spectro_helper.plotlabel(mode,1)
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: mode_map[mode]
    nconnections: '2'
    ref_level: '0'
    showports: 'True'
    update_time: 1.0/5.0
    vlen: '3600'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"Time (Minutes)"'
    x_start: '0'
    x_step: -(1.0/60.0)
    x_units: '"Mins"'
    y_axis_label: '"Deteced Power (arb units)"'
    y_units: '""'
    ymax: '1.5'
    ymin: '0.0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 788]
    rotation: 0
    state: enabled
- name: qtgui_vector_sink_f_0_1
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    average: '1.0'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'True'
    gui_hint: spec_tab@1
    label1: spec_labels[0]
    label10: ''
    label2: spec_labels[1]
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Frequency (MHz)"'
    nconnections: '2'
    ref_level: '0'
    showports: 'True'
    update_time: 1.0/15
    vlen: fftsize
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"Frequency (MHz)"'
    x_start: (ifreq-samp_rate/2)/1.0e6
    x_step: fincr
    x_units: '"MHz"'
    y_axis_label: '"Rel. Power (dB)"'
    y_units: '"dB"'
    ymax: '+5'
    ymin: '-1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 692]
    rotation: 0
    state: enabled
- name: qtgui_waterfall_sink_x_0
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '3'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: ifreq
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: spec_tab@2
    int_max: '-40'
    int_min: '-90'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: Spectrogram
    nconnections: '1'
    showports: 'True'
    type: complex
    update_time: '0.2'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1624, 600]
    rotation: 0
    state: enabled
- name: ra
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Target RA
    short_id: ''
    type: eng_float
    value: '12.0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 2384]
    rotation: 0
    state: enabled
- name: rfilist
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: RFI Frequency List
    short_id: ''
    type: ''
    value: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 2276]
    rotation: 0
    state: enabled
- name: single_pole_iir_filter_xx_0
  id: single_pole_iir_filter_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: helper.getalpha(fft_hz/2.0,fftrate)
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 1724]
    rotation: 0
    state: enabled
- name: single_pole_iir_filter_xx_0_0
  id: single_pole_iir_filter_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: helper.getalpha(fft_hz/2.0,fftrate)
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [776, 1828]
    rotation: 0
    state: enabled
- name: single_pole_iir_filter_xx_1
  id: single_pole_iir_filter_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: helper.getalpha(fft_hz/2.0,samp_rate)
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 1156]
    rotation: 0
    state: enabled
- name: single_pole_iir_filter_xx_2
  id: single_pole_iir_filter_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: helper.getalpha(frate/2.0,fft_hz)
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1352, 1004]
    rotation: 0
    state: enabled
- name: spec_interval
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Spectral Logging Interval
    short_id: ''
    type: intx
    value: '15'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 2576]
    rotation: 0
    state: enabled
- name: spec_tab
  id: qtgui_tab_widget
  parameters:
    alias: ''
    comment: ''
    gui_hint: main_tab@0:3,0,1,4
    label0: Doppler
    label1: Frequency
    label10: Tab 10
    label11: Tab 11
    label12: Tab 12
    label13: Tab 13
    label14: Tab 14
    label15: Tab 15
    label16: Tab 16
    label17: Tab 17
    label18: Tab 18
    label19: Tab 19
    label2: Waterfall
    label3: Waterfall
    label4: Tab 4
    label5: Tab 5
    label6: Tab 6
    label7: Tab 7
    label8: Tab 8
    label9: Tab 9
    num_tabs: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 2024]
    rotation: 0
    state: enabled
- name: srate
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Sample rate
    short_id: ''
    type: eng_float
    value: 2.56e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1008, 2164]
    rotation: 0
    state: enabled
- name: tp_interval
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: TP Logging Interval
    short_id: ''
    type: intx
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 2576]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: fft_decim_vectors
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1592, 172]
    rotation: 0
    state: enabled
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: fft_filtered
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 1796]
    rotation: 0
    state: enabled
- name: virtual_sink_1_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: fft2_filtered
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 1932]
    rotation: 0
    state: enabled
- name: virtual_sink_2
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 140]
    rotation: 0
    state: enabled
- name: virtual_sink_2_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 204]
    rotation: 0
    state: enabled
- name: virtual_sink_3
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 1444]
    rotation: 0
    state: enabled
- name: virtual_sink_4
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb_out0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2792, 2100]
    rotation: 0
    state: enabled
- name: virtual_sink_4_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb_out1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2808, 2484]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: fft_decim_vectors
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 532]
    rotation: 0
    state: enabled
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: fft_filtered
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 20]
    rotation: 0
    state: enabled
- name: virtual_source_1_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: fft2_filtered
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 124]
    rotation: 0
    state: enabled
- name: virtual_source_2
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 1372]
    rotation: 0
    state: enabled
- name: virtual_source_2_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 1308]
    rotation: 0
    state: enabled
- name: virtual_source_3
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 1244]
    rotation: 0
    state: enabled
- name: virtual_source_3_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 1380]
    rotation: 0
    state: enabled
- name: virtual_source_4
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 492]
    rotation: 0
    state: enabled
- name: virtual_source_4_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Chan1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1288, 540]
    rotation: 0
    state: enabled
- name: virtual_source_5
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1688, 1892]
    rotation: 0
    state: enabled
- name: virtual_source_5_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1880, 2668]
    rotation: 0
    state: enabled
- name: virtual_source_6
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb_out0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 1436]
    rotation: 0
    state: enabled
- name: virtual_source_6_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: pfb_out1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 1524]
    rotation: 0
    state: enabled
- name: zerofile
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: File containing zeroing map
    short_id: ''
    type: ''
    value: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1512, 2064]
    rotation: 0
    state: enabled
- name: zerotime
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: SIdereal time for auto baseline set
    short_id: ''
    type: eng_float
    value: '99.3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 2076]
    rotation: 0
    state: enabled

connections:
- [blocks_add_const_vxx_0, '0', qtgui_vector_sink_f_0, '0']
- [blocks_add_const_vxx_0, '0', qtgui_vector_sink_f_0_1, '0']
- [blocks_add_const_vxx_0_0, '0', qtgui_vector_sink_f_0_0, '0']
- [blocks_add_const_vxx_0_0_0, '0', qtgui_vector_sink_f_0_0, '1']
- [blocks_add_const_vxx_0_1, '0', qtgui_vector_sink_f_0, '1']
- [blocks_add_const_vxx_0_1, '0', qtgui_vector_sink_f_0_1, '1']
- [blocks_add_const_vxx_1, '0', blocks_stream_to_vector_0_0, '0']
- [blocks_add_xx_0, '0', qtgui_waterfall_sink_x_0, '0']
- [blocks_add_xx_1, '0', virtual_sink_4, '0']
- [blocks_add_xx_1_0, '0', virtual_sink_4_0, '0']
- [blocks_complex_to_mag_squared_0, '0', single_pole_iir_filter_xx_0, '0']
- [blocks_complex_to_mag_squared_0_0, '0', single_pole_iir_filter_xx_0_0, '0']
- [blocks_delay_0, '0', blocks_multiply_const_vxx_4, '0']
- [blocks_delay_0_1, '0', blocks_multiply_const_vxx_4_2, '0']
- [blocks_keep_m_in_n_0, '0', blocks_stream_to_vector_0, '0']
- [blocks_keep_m_in_n_0_0, '0', blocks_add_const_vxx_1, '0']
- [blocks_keep_one_in_n_0, '0', blocks_nlog10_ff_0, '0']
- [blocks_keep_one_in_n_0_0, '0', blocks_nlog10_ff_0_0, '0']
- [blocks_keep_one_in_n_1, '0', blocks_sub_xx_0, '0']
- [blocks_keep_one_in_n_1, '0', single_pole_iir_filter_xx_2, '0']
- [blocks_multiply_conjugate_cc_0, '0', single_pole_iir_filter_xx_1, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_multiply_conjugate_cc_0, '0']
- [blocks_multiply_const_vxx_1, '0', blocks_add_const_vxx_0, '0']
- [blocks_multiply_const_vxx_1, '0', blocks_add_const_vxx_0_1, '0']
- [blocks_multiply_const_vxx_2, '0', blocks_sub_xx_0, '1']
- [blocks_multiply_const_vxx_3, '0', blocks_add_xx_0, '0']
- [blocks_multiply_const_vxx_3_0, '0', blocks_add_xx_0, '1']
- [blocks_multiply_const_vxx_4, '0', blocks_add_xx_1, '1']
- [blocks_multiply_const_vxx_4_0, '0', blocks_add_xx_1, '0']
- [blocks_multiply_const_vxx_4_0_0, '0', blocks_add_xx_1_0, '0']
- [blocks_multiply_const_vxx_4_2, '0', blocks_add_xx_1_0, '1']
- [blocks_nlog10_ff_0, '0', fft_probe, '0']
- [blocks_nlog10_ff_0, '0', virtual_sink_0, '0']
- [blocks_nlog10_ff_0_0, '0', fft2_probe, '0']
- [blocks_null_source_0, '0', blocks_throttle2_0, '0']
- [blocks_stream_to_vector_0, '0', virtual_sink_3, '0']
- [blocks_stream_to_vector_0_0, '0', cronk, '0']
- [blocks_sub_xx_0, '0', corr_probe, '0']
- [blocks_throttle2_0, '0', blocks_add_const_vxx_0_0, '0']
- [blocks_throttle2_0, '0', blocks_add_const_vxx_0_0_0, '0']
- [fft_vxx_0, '0', blocks_complex_to_mag_squared_0, '0']
- [fft_vxx_0_0, '0', blocks_complex_to_mag_squared_0_0, '0']
- [osmosdr_source_0, '0', virtual_sink_2, '0']
- [osmosdr_source_0, '1', virtual_sink_2_0, '0']
- [single_pole_iir_filter_xx_0, '0', virtual_sink_1, '0']
- [single_pole_iir_filter_xx_0_0, '0', virtual_sink_1_0, '0']
- [single_pole_iir_filter_xx_1, '0', blocks_keep_one_in_n_1, '0']
- [single_pole_iir_filter_xx_2, '0', blocks_multiply_const_vxx_2, '0']
- [virtual_source_0, '0', blocks_multiply_const_vxx_1, '0']
- [virtual_source_1, '0', blocks_keep_one_in_n_0, '0']
- [virtual_source_1_0, '0', blocks_keep_one_in_n_0_0, '0']
- [virtual_source_2, '0', blocks_keep_m_in_n_0, '0']
- [virtual_source_2_0, '0', blocks_keep_m_in_n_0_0, '0']
- [virtual_source_3, '0', blocks_multiply_const_vxx_0, '0']
- [virtual_source_3_0, '0', blocks_multiply_conjugate_cc_0, '1']
- [virtual_source_4, '0', blocks_multiply_const_vxx_3, '0']
- [virtual_source_4_0, '0', blocks_multiply_const_vxx_3_0, '0']
- [virtual_source_5, '0', blocks_delay_0, '0']
- [virtual_source_5, '0', blocks_multiply_const_vxx_4_0, '0']
- [virtual_source_5_0, '0', blocks_delay_0_1, '0']
- [virtual_source_5_0, '0', blocks_multiply_const_vxx_4_0_0, '0']
- [virtual_source_6, '0', fft_vxx_0, '0']
- [virtual_source_6_0, '0', fft_vxx_0_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.9.2
